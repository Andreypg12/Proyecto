/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package UI;

import BLL.Cita;
import BLL.Paciente;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyledEditorKit;

/**
 *
 * @author andre
 */
public class JInternalListaCitasPorFecha extends javax.swing.JInternalFrame {

    private List<Paciente> arrayPacientes;
    private DefaultTableModel modeloTabla;
    
    /**
     * Creates new form JInternalListaCitasPorFecha
     */
    public JInternalListaCitasPorFecha() {
        initComponents();
        modeloTabla = (DefaultTableModel)jTableCitas.getModel();
        llenarArrayCitas();
    }
    
    private void llenarArrayCitas() {
        arrayPacientes = new ArrayList<>();
        try {
            arrayPacientes = Cita.consultarPacientesConCita();
        } catch (SQLException ex) {
            Logger.getLogger(JInternalListaCitasPorFecha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jBtnMostrarCitas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCitas = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setClosable(true);

        jSpinner1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jSpinner1.setModel(new javax.swing.SpinnerDateModel());
        jSpinner1.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner1, "dd-MM-yyyy"));

        jBtnMostrarCitas.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jBtnMostrarCitas.setText("Mostrar las citas de la fecha indicada");
        jBtnMostrarCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnMostrarCitasActionPerformed(evt);
            }
        });

        jTableCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paciente", "Dueño", "Motivo", "Evaluaciones", "Pruebas de laboratorio", "Costo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableCitas);

        jButton2.setText("Mostrar toda la información de la cita");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(365, 365, 365)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBtnMostrarCitas))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1043, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnMostrarCitas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnMostrarCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnMostrarCitasActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        String fechaSeleccionada = sdf.format(jSpinner1.getValue());
        modeloTabla.setRowCount(0);
        for (Paciente paciente : arrayPacientes) {
            
            for (Cita cita : paciente.getArrayCitas()) {
                
                String fechaCita = sdf.format(cita.getFechaCita());
                
                if (fechaSeleccionada.equals(fechaCita)) {
                    Object[] fila = new Object[7];

                    fila[0] = paciente.toString();
                    fila[1] = paciente.getDueño().getNombre();
                    
                    if (cita.getArrayMotivo().isEmpty()) {
                        fila[2] = "No hay motivos";
                    } else {
                        fila[2] = cita.getArrayMotivo().size();
                    }
                    if (cita.getArrayEvaluacion().isEmpty()) {
                        fila[3] = "No hay evaluaciones";
                    } else {
                        fila[3] = cita.getArrayEvaluacion().size();
                    }
                    if (cita.getArrayPruebaLaboratorio().isEmpty()) {
                        fila[4] = "No hay pruebas de laboratorio";
                    } else {
                        fila[4] = cita.getArrayPruebaLaboratorio().size();
                    }

                    fila[5] = cita;
                    
                    modeloTabla.addRow(fila);
                }
            }
        }
        if (modeloTabla.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay citas en esa fecha", "No hay citas", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBtnMostrarCitasActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fila = jTableCitas.getSelectedRow();
        if (fila != -1) {
            JOptionPane.showMessageDialog(null, ((Cita)modeloTabla.getValueAt(fila, 5)).toStringInformacion());
        }
        else{
            JOptionPane.showMessageDialog(null, "Debes elegir una cita de la lista", "Cita no elegida", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnMostrarCitas;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTableCitas;
    // End of variables declaration//GEN-END:variables
}
