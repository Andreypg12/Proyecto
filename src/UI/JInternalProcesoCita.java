/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package UI;

import BLL.*;
import java.sql.SQLException;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author andre
 */
public class JInternalProcesoCita extends javax.swing.JInternalFrame {

    DefaultListModel<Dueño> modeloListaDuenos = new DefaultListModel<>();
    DefaultListModel<Paciente> modeloListaPacientes = new DefaultListModel<>();
    DefaultListModel<Motivo> modeloListaMotivos = new DefaultListModel<>();
    DefaultListModel<SubCategoriaPrueba> modeloListaSubCategoriasPruebaLaboratorio = new DefaultListModel<>();
    DefaultListModel<TiposEvaluaciones> modeloListaTiposEvaluaciones = new DefaultListModel<>();
    DefaultListModel<Evaluacion> modeloListaEvaluacionesHechas = new DefaultListModel<>();
    
    DefaultTableModel modeloTablaMotivos;
    DefaultTableModel modeloTablaSubCategorias;
    List<Raza> arrayRazasPerros;
    List<Raza> arrayRazasGatos;
    List<Dueño> arrayDueños;
    List<Motivo> arrayMotivosElegidos;
    List<SubCategoriaPrueba> arrayTodasLasSubCategorias;
    List<PruebaLaboratorio> arrayPruebasLaboratorioElegidas;
    List<Evaluacion> arrayEvaluacionesElegidas;
    Dueño dueno;
    Paciente paciente;
    
    /**
     * 
     * Creates new form JInternalProcesoCIta
     */
    public JInternalProcesoCita() {
        initComponents();
        jListDueno.setModel(modeloListaDuenos);
        jListPaciente.setModel(modeloListaPacientes);
        actualizararrayDuenos();
        modeloListaDuenos.addAll(arrayDueños);
        jCmbSexo.setModel(new DefaultComboBoxModel<>(Sexo.values()));
        try {
            jCmbEspecie.setModel(new DefaultComboBoxModel(Especie.consultarEspecies().toArray()));
            
            
            
            arrayTodasLasSubCategorias = SubCategoriaPrueba.consultarSubCategorias();
            
        } catch (Exception ex) {
            Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        CrearListaRazas();
        jCmbRaza.setModel(new DefaultComboBoxModel(arrayRazasPerros.toArray()));
        
        
        
        llenarListaMotivos();
        llenarComboBoxPruebasLaboratorio();
        llenarListaSubCategorias();
        arrayMotivosElegidos = new ArrayList<>();
        arrayPruebasLaboratorioElegidas = new ArrayList<>();
        arrayEvaluacionesElegidas = new ArrayList<>();
        modeloTablaMotivos = (DefaultTableModel)jTableMotivosElegidos.getModel();
        modeloTablaSubCategorias = (DefaultTableModel)jTablePruebasElegidas.getModel();
        
        jListEvaluacionesHechas.setModel(modeloListaEvaluacionesHechas);
        
        jCmbVacunas.setVisible(false);
        jLblVacunas.setVisible(false);
        jTxtPrecioMotivo.setEditable(false);
        
        llenarListTiposEvaluaciones();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JBtnGroupEstadoEvaluacion = new javax.swing.ButtonGroup();
        JBtnGroupCondicion = new javax.swing.ButtonGroup();
        JBtnGroupAlicaExamen = new javax.swing.ButtonGroup();
        jTPlProcesoCita = new javax.swing.JTabbedPane();
        jPanelPaciente = new PanelConFondo("/Imagenes/FondoCitas.png");
        jPanelDueno = new javax.swing.JPanel();
        jLblNombreDueno = new javax.swing.JLabel();
        jTxtNombreDueno = new javax.swing.JTextField();
        jLblDireccion = new javax.swing.JLabel();
        jTxtDireccionDueno = new javax.swing.JTextField();
        jLblNumeroTelefono = new javax.swing.JLabel();
        jFTxtNumeroTelefono = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDueno = new javax.swing.JList<>();
        jLblDuenos = new javax.swing.JLabel();
        jBtnElegirDueno = new javax.swing.JButton();
        jBtnAnadirNuevoDueno = new javax.swing.JButton();
        jFTxtNumeroCedula = new javax.swing.JFormattedTextField();
        jLblCedula = new javax.swing.JLabel();
        jBtnLimpiarDueno = new javax.swing.JButton();
        jPanelDatosPaciente = new javax.swing.JPanel();
        jLblNombrePaciente = new javax.swing.JLabel();
        jTxtNombrePaciente = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListPaciente = new javax.swing.JList<>();
        jLblPacientes = new javax.swing.JLabel();
        jBtnElegirPaciente = new javax.swing.JButton();
        jBtnAnadirNuevoPaciente = new javax.swing.JButton();
        jLblSexoPaciente = new javax.swing.JLabel();
        jLblEdad = new javax.swing.JLabel();
        jLblEspecie = new javax.swing.JLabel();
        jCmbEspecie = new javax.swing.JComboBox<>();
        jCmbSexo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSprEdad = new javax.swing.JSpinner();
        jLblEdad1 = new javax.swing.JLabel();
        jLblEspecie1 = new javax.swing.JLabel();
        jCmbRaza = new javax.swing.JComboBox<>();
        jBtnLimpiarPaciente = new javax.swing.JButton();
        jLblDuenoElegido = new javax.swing.JLabel();
        jPanelCita = new PanelConFondo("/Imagenes/FondoCreacionCita.png");
        jPanel3 = new javax.swing.JPanel();
        jSprFechaCita = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jPanelMotivo = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListMotivos = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jTxtPrecioMotivo = new javax.swing.JTextField();
        jCmbVacunas = new javax.swing.JComboBox<>();
        jLblVacunas = new javax.swing.JLabel();
        jBtnAgregarMotivo = new javax.swing.JButton();
        jLblAplicaExamen = new javax.swing.JLabel();
        jRbdSiAplicaExamen = new javax.swing.JRadioButton();
        jRbdNoAplicaExamen = new javax.swing.JRadioButton();
        jPanelPrueba = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListSubCategorias = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jCmbPruebasLaboratorio = new javax.swing.JComboBox<>();
        jBtnAgregarPrueba = new javax.swing.JButton();
        jPanelMotivosElegidos = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableMotivosElegidos = new javax.swing.JTable();
        jBtnEliminarMotivo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTablePruebasElegidas = new javax.swing.JTable();
        jBtnEliminarPrueba = new javax.swing.JButton();
        jPanelDatosPaciente2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLblNombrePacienteDatos = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jRdbExitado = new javax.swing.JRadioButton();
        jRdbDeprimido = new javax.swing.JRadioButton();
        jRdbPostrado = new javax.swing.JRadioButton();
        jRdbPesoNormal = new javax.swing.JRadioButton();
        jRdbBajoPeso = new javax.swing.JRadioButton();
        jRdbSobrePeso = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jSprFrecuenciaCardiaca = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jSprFrecuenciaRespiratoria = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jSprPulso = new javax.swing.JSpinner();
        jSprTemperatura = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTxtDiagnostico = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTxtIndicaciones = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jListTiposEvaluaciones = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jRbdNormal = new javax.swing.JRadioButton();
        jRbdAnormal = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jListEvaluacionesHechas = new javax.swing.JList<>();
        jBtnAgregarEvaluación = new javax.swing.JButton();
        jBtnEliminarEvaluacion = new javax.swing.JButton();
        jBtncrearCita = new javax.swing.JButton();

        setClosable(true);
        setTitle("Proceso de citas");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanelDueno.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos del dueño"));
        jPanelDueno.setOpaque(false);

        jLblNombreDueno.setText("Nombre");

        jTxtNombreDueno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtNombreDuenoActionPerformed(evt);
            }
        });

        jLblDireccion.setText("Dirección");

        jTxtDireccionDueno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtDireccionDuenoActionPerformed(evt);
            }
        });

        jLblNumeroTelefono.setText("Numero de teléfono");

        try {
            jFTxtNumeroTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTxtNumeroTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFTxtNumeroTelefonoActionPerformed(evt);
            }
        });

        jListDueno.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListDueno);

        jLblDuenos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblDuenos.setText("Lista de dueños");

        jBtnElegirDueno.setText("Elegir dueño seleccionado");
        jBtnElegirDueno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnElegirDuenoActionPerformed(evt);
            }
        });

        jBtnAnadirNuevoDueno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AgregarDueño.png"))); // NOI18N
        jBtnAnadirNuevoDueno.setText("Añadir nuevo dueño");
        jBtnAnadirNuevoDueno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAnadirNuevoDuenoActionPerformed(evt);
            }
        });

        try {
            jFTxtNumeroCedula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#-####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFTxtNumeroCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFTxtNumeroCedulaActionPerformed(evt);
            }
        });
        jFTxtNumeroCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTxtNumeroCedulaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTxtNumeroCedulaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFTxtNumeroCedulaKeyTyped(evt);
            }
        });

        jLblCedula.setText("Cédula");

        jBtnLimpiarDueno.setText("Limpiar");
        jBtnLimpiarDueno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarDuenoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDuenoLayout = new javax.swing.GroupLayout(jPanelDueno);
        jPanelDueno.setLayout(jPanelDuenoLayout);
        jPanelDuenoLayout.setHorizontalGroup(
            jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDuenoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDuenoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBtnAnadirNuevoDueno, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDuenoLayout.createSequentialGroup()
                                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLblNumeroTelefono)
                                    .addComponent(jLblCedula)
                                    .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLblDireccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLblNombreDueno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTxtDireccionDueno)
                                    .addComponent(jTxtNombreDueno)
                                    .addComponent(jFTxtNumeroTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFTxtNumeroCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLblDuenos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDuenoLayout.createSequentialGroup()
                        .addComponent(jBtnLimpiarDueno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnElegirDueno)))
                .addContainerGap())
        );
        jPanelDuenoLayout.setVerticalGroup(
            jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDuenoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTxtNumeroCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxtNombreDueno)
                    .addComponent(jLblNombreDueno, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtDireccionDueno))
                .addGap(18, 18, 18)
                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblNumeroTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTxtNumeroTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBtnAnadirNuevoDueno)
                .addGap(18, 18, 18)
                .addComponent(jLblDuenos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDuenoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnElegirDueno)
                    .addComponent(jBtnLimpiarDueno))
                .addContainerGap())
        );

        jPanelDatosPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos del paciente"));
        jPanelDatosPaciente.setOpaque(false);

        jLblNombrePaciente.setText("Nombre");

        jTxtNombrePaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtNombrePacienteKeyTyped(evt);
            }
        });

        jListPaciente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jListPaciente);

        jLblPacientes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblPacientes.setText("Lista de pacientes por dueño");

        jBtnElegirPaciente.setText("Elegir paciente seleccionado");
        jBtnElegirPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnElegirPacienteActionPerformed(evt);
            }
        });

        jBtnAnadirNuevoPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AgregarPaciente.png"))); // NOI18N
        jBtnAnadirNuevoPaciente.setText("Añadir nuevo paciente");
        jBtnAnadirNuevoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAnadirNuevoPacienteActionPerformed(evt);
            }
        });

        jLblSexoPaciente.setText("Sexo");

        jLblEdad.setText("Edad");

        jLblEspecie.setText("Especie");

        jCmbEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbEspecieActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Perro.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/gato.png"))); // NOI18N

        jSprEdad.setModel(new javax.swing.SpinnerNumberModel(0, 0, 300, 1));

        jLblEdad1.setText("Meses");

        jLblEspecie1.setText("Raza");

        jBtnLimpiarPaciente.setText("Limpiar");
        jBtnLimpiarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarPacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosPacienteLayout = new javax.swing.GroupLayout(jPanelDatosPaciente);
        jPanelDatosPaciente.setLayout(jPanelDatosPacienteLayout);
        jPanelDatosPacienteLayout.setHorizontalGroup(
            jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                    .addGroup(jPanelDatosPacienteLayout.createSequentialGroup()
                        .addComponent(jLblPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPacienteLayout.createSequentialGroup()
                        .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLblEspecie)
                            .addComponent(jLblSexoPaciente)
                            .addComponent(jLblEdad)
                            .addComponent(jLblEspecie1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosPacienteLayout.createSequentialGroup()
                                .addComponent(jSprEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLblEdad1))
                            .addComponent(jCmbRaza, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPacienteLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCmbEspecie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(jCmbSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTxtNombrePaciente)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPacienteLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtnAnadirNuevoPaciente))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPacienteLayout.createSequentialGroup()
                        .addComponent(jBtnLimpiarPaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnElegirPaciente)))
                .addContainerGap())
        );
        jPanelDatosPacienteLayout.setVerticalGroup(
            jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosPacienteLayout.createSequentialGroup()
                        .addComponent(jLblNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLblEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLblSexoPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLblEspecie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLblEspecie1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelDatosPacienteLayout.createSequentialGroup()
                        .addComponent(jTxtNombrePaciente)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSprEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLblEdad1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jCmbEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jCmbRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnAnadirNuevoPaciente)
                .addGap(12, 12, 12)
                .addComponent(jLblPacientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnElegirPaciente)
                    .addComponent(jBtnLimpiarPaciente))
                .addContainerGap())
        );

        jLblDuenoElegido.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblDuenoElegido.setText("Dueño no elegido");

        javax.swing.GroupLayout jPanelPacienteLayout = new javax.swing.GroupLayout(jPanelPaciente);
        jPanelPaciente.setLayout(jPanelPacienteLayout);
        jPanelPacienteLayout.setHorizontalGroup(
            jPanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPacienteLayout.createSequentialGroup()
                .addContainerGap(294, Short.MAX_VALUE)
                .addComponent(jPanelDueno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLblDuenoElegido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDatosPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(218, 218, 218))
        );
        jPanelPacienteLayout.setVerticalGroup(
            jPanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPacienteLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLblDuenoElegido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelDueno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDatosPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        jTPlProcesoCita.addTab("Paciente", jPanelPaciente);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos de la cita"));
        jPanel3.setOpaque(false);

        jSprFechaCita.setModel(new javax.swing.SpinnerDateModel());
        jSprFechaCita.setEditor(new javax.swing.JSpinner.DateEditor(jSprFechaCita, "dd-MM-yyyy HH:mm"));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Fecha");

        jPanelMotivo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Motivo de la cita"));
        jPanelMotivo.setOpaque(false);

        jListMotivos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListMotivos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListMotivosValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jListMotivos);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Precio");

        jTxtPrecioMotivo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtPrecioMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtPrecioMotivoActionPerformed(evt);
            }
        });

        jCmbVacunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbVacunasActionPerformed(evt);
            }
        });

        jLblVacunas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblVacunas.setText("Vacunas");

        jBtnAgregarMotivo.setText("Agregar motivo");
        jBtnAgregarMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarMotivoActionPerformed(evt);
            }
        });

        jLblAplicaExamen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblAplicaExamen.setText("Aplica examen");

        JBtnGroupAlicaExamen.add(jRbdSiAplicaExamen);
        jRbdSiAplicaExamen.setText("Si");

        JBtnGroupAlicaExamen.add(jRbdNoAplicaExamen);
        jRbdNoAplicaExamen.setText("No");

        javax.swing.GroupLayout jPanelMotivoLayout = new javax.swing.GroupLayout(jPanelMotivo);
        jPanelMotivo.setLayout(jPanelMotivoLayout);
        jPanelMotivoLayout.setHorizontalGroup(
            jPanelMotivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelMotivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMotivoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRbdSiAplicaExamen)
                        .addGap(18, 18, 18)
                        .addComponent(jRbdNoAplicaExamen)
                        .addGap(22, 22, 22))
                    .addGroup(jPanelMotivoLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanelMotivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblAplicaExamen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCmbVacunas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLblVacunas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTxtPrecioMotivo)
                            .addComponent(jBtnAgregarMotivo, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanelMotivoLayout.setVerticalGroup(
            jPanelMotivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMotivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanelMotivoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtPrecioMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLblVacunas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCmbVacunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jLblAplicaExamen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMotivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRbdNoAplicaExamen, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jRbdSiAplicaExamen, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnAgregarMotivo)))
                .addContainerGap())
        );

        jPanelPrueba.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Pruebas de laboratorio"));
        jPanelPrueba.setOpaque(false);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Pruebas de laboratorio");

        jListSubCategorias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jListSubCategorias);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Tipo de prueba");

        jCmbPruebasLaboratorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbPruebasLaboratorioActionPerformed(evt);
            }
        });

        jBtnAgregarPrueba.setText("Agregar prueba");
        jBtnAgregarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarPruebaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPruebaLayout = new javax.swing.GroupLayout(jPanelPrueba);
        jPanelPrueba.setLayout(jPanelPruebaLayout);
        jPanelPruebaLayout.setHorizontalGroup(
            jPanelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPruebaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPruebaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtnAgregarPrueba)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPruebaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCmbPruebasLaboratorio, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );
        jPanelPruebaLayout.setVerticalGroup(
            jPanelPruebaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPruebaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCmbPruebasLaboratorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnAgregarPrueba)
                .addGap(106, 106, 106))
        );

        jPanelMotivosElegidos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Motivos elegidos"));
        jPanelMotivosElegidos.setOpaque(false);

        jTableMotivosElegidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Motivo", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMotivosElegidos.setOpaque(false);
        jScrollPane5.setViewportView(jTableMotivosElegidos);

        jBtnEliminarMotivo.setText("Eliminar");
        jBtnEliminarMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarMotivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMotivosElegidosLayout = new javax.swing.GroupLayout(jPanelMotivosElegidos);
        jPanelMotivosElegidos.setLayout(jPanelMotivosElegidosLayout);
        jPanelMotivosElegidosLayout.setHorizontalGroup(
            jPanelMotivosElegidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotivosElegidosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMotivosElegidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMotivosElegidosLayout.createSequentialGroup()
                        .addGap(0, 217, Short.MAX_VALUE)
                        .addComponent(jBtnEliminarMotivo)))
                .addContainerGap())
        );
        jPanelMotivosElegidosLayout.setVerticalGroup(
            jPanelMotivosElegidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMotivosElegidosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnEliminarMotivo)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Pruebas elegidas"));
        jPanel1.setOpaque(false);

        jTablePruebasElegidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prueba", "Tipo prueba", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePruebasElegidas.setOpaque(false);
        jScrollPane6.setViewportView(jTablePruebasElegidas);

        jBtnEliminarPrueba.setText("Eliminar");
        jBtnEliminarPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarPruebaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtnEliminarPrueba)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnEliminarPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jSprFechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelPrueba, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelMotivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelMotivosElegidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSprFechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelMotivosElegidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelMotivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, Short.MAX_VALUE)
                    .addComponent(jPanelPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanelDatosPaciente2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos del paciente"));
        jPanelDatosPaciente2.setOpaque(false);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Nombre");

        jLblNombrePacienteDatos.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLblNombrePacienteDatos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblNombrePacienteDatos.setText(" ");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Actitud");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Condicion");

        jRdbExitado.setText("Exitado");

        jRdbDeprimido.setText("Deprimido");

        jRdbPostrado.setText("Postrado");

        JBtnGroupCondicion.add(jRdbPesoNormal);
        jRdbPesoNormal.setText("Peso normal");

        JBtnGroupCondicion.add(jRdbBajoPeso);
        jRdbBajoPeso.setText("Bajo peso");

        JBtnGroupCondicion.add(jRdbSobrePeso);
        jRdbSobrePeso.setText("Sobre peso");

        jLabel11.setText("Frecuencia cardiaca");

        jSprFrecuenciaCardiaca.setModel(new javax.swing.SpinnerNumberModel(100, 0, null, 1));

        jLabel12.setText("Frecuencia respiratoria");

        jSprFrecuenciaRespiratoria.setModel(new javax.swing.SpinnerNumberModel(10, 0, null, 1));

        jLabel13.setText("Pulso");

        jSprPulso.setModel(new javax.swing.SpinnerNumberModel(100, 0, null, 1));

        jSprTemperatura.setModel(new javax.swing.SpinnerNumberModel(35, 0, null, 1));

        jLabel14.setText("Temperatura");

        jLabel15.setText("C°");

        jLabel16.setText("Diagnostico");

        jLabel17.setText("Indicaciones");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Evaluaciones"));
        jPanel2.setOpaque(false);

        jListTiposEvaluaciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(jListTiposEvaluaciones);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Tipos de evaluación");

        JBtnGroupEstadoEvaluacion.add(jRbdNormal);
        jRbdNormal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jRbdNormal.setText("Normal");

        JBtnGroupEstadoEvaluacion.add(jRbdAnormal);
        jRbdAnormal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jRbdAnormal.setText("Anormal");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Evaluaciones hechas");

        jScrollPane8.setViewportView(jListEvaluacionesHechas);

        jBtnAgregarEvaluación.setText("Agregar evaluación");
        jBtnAgregarEvaluación.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarEvaluaciónActionPerformed(evt);
            }
        });

        jBtnEliminarEvaluacion.setText("Eliminar");
        jBtnEliminarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarEvaluacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jBtnAgregarEvaluación, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnEliminarEvaluacion))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRbdAnormal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRbdNormal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jRbdNormal)
                        .addGap(18, 18, 18)
                        .addComponent(jRbdAnormal))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(jScrollPane8))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAgregarEvaluación)
                    .addComponent(jBtnEliminarEvaluacion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelDatosPaciente2Layout = new javax.swing.GroupLayout(jPanelDatosPaciente2);
        jPanelDatosPaciente2.setLayout(jPanelDatosPaciente2Layout);
        jPanelDatosPaciente2Layout.setHorizontalGroup(
            jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLblNombrePacienteDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                        .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jRdbExitado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRdbPostrado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRdbDeprimido, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPaciente2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRdbSobrePeso, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRdbPesoNormal)
                                    .addComponent(jRdbBajoPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(81, 81, 81))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                        .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(13, 13, 13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPaciente2Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtDiagnostico)
                            .addComponent(jTxtIndicaciones))))
                .addContainerGap())
            .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(70, 70, 70)
                        .addComponent(jSprTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                        .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSprFrecuenciaCardiaca)
                            .addComponent(jSprFrecuenciaRespiratoria)
                            .addComponent(jSprPulso, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDatosPaciente2Layout.setVerticalGroup(
            jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLblNombrePacienteDatos)
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                        .addComponent(jRdbExitado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRdbDeprimido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRdbPostrado))
                    .addGroup(jPanelDatosPaciente2Layout.createSequentialGroup()
                        .addComponent(jRdbBajoPeso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRdbSobrePeso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRdbPesoNormal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSprFrecuenciaCardiaca))
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSprFrecuenciaRespiratoria))
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSprPulso)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSprTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanelDatosPaciente2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtIndicaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jBtncrearCita.setText("Crear cita");
        jBtncrearCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtncrearCitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCitaLayout = new javax.swing.GroupLayout(jPanelCita);
        jPanelCita.setLayout(jPanelCitaLayout);
        jPanelCitaLayout.setHorizontalGroup(
            jPanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCitaLayout.createSequentialGroup()
                .addGroup(jPanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCitaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCitaLayout.createSequentialGroup()
                        .addGap(392, 392, 392)
                        .addComponent(jBtncrearCita)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDatosPaciente2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelCitaLayout.setVerticalGroup(
            jPanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCitaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCitaLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtncrearCita))
                    .addComponent(jPanelDatosPaciente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTPlProcesoCita.addTab("Cita", jPanelCita);

        getContentPane().add(jTPlProcesoCita);

        pack();
    }// </editor-fold>//GEN-END:initComponents

     // <editor-fold defaultstate="collapsed" desc="Codigo de Dueño y paciente">
    private void jFTxtNumeroCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTxtNumeroCedulaKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jFTxtNumeroCedulaKeyTyped

    private void llenarListTiposEvaluaciones(){
        jListTiposEvaluaciones.setModel(modeloListaTiposEvaluaciones);
        for (TiposEvaluaciones tipoEvaluacion: TiposEvaluaciones.values()) {
            modeloListaTiposEvaluaciones.addElement(tipoEvaluacion);
        }
    }
    
    private void llenarComboBoxVacunas(){
        jCmbVacunas.setSelectedIndex(-1);
        jCmbVacunas.removeAllItems();
        try {
            for (Vacuna vacuna : Vacuna.consultarVacunas()) {
                if (paciente.getEspecie().getId_especie() == vacuna.getEspecieVacuna().getId_especie()) {
                    jCmbVacunas.addItem(vacuna);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void actualizararrayDuenos(){
        try {
            arrayDueños = Dueño.cosultarDueños();
        } catch (Exception ex) {
            Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void CrearListaRazas(){
        try {
            arrayRazasPerros = new ArrayList<>();
            arrayRazasGatos = new ArrayList<>();
            for (Raza raza : Raza.consultarRazas()) {
                if (raza.getEspecieAQuePertenece().getId_especie() == 1) {
                    arrayRazasPerros.add(raza);
                }
                else if (raza.getEspecieAQuePertenece().getId_especie() == 2) {
                    arrayRazasGatos.add(raza);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(JInternalMantenimientoEspeciesRazas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jBtnAnadirNuevoDuenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAnadirNuevoDuenoActionPerformed
        // TODO add your handling code here:
        String cedula = jFTxtNumeroCedula.getText().replace("-", "").trim();
        String nombre = jTxtNombreDueno.getText().trim();
        String direccion = jTxtDireccionDueno.getText().trim();
        String numero_telefono = jFTxtNumeroTelefono.getText().replace("-", "").trim();

        try {
            if (modeloListaDuenos.get(0).getCedula().equals(cedula)) {
                JOptionPane.showMessageDialog(null, "El Dueño solo fue elegido porque ya existe", "Dueño ya existente", JOptionPane.ERROR_MESSAGE);
                dueno = modeloListaDuenos.get(0);
                jTxtNombreDueno.setText(dueno.getNombre());
                jTxtDireccionDueno.setText(dueno.getDireccion());
                jFTxtNumeroTelefono.setText(dueno.getTelefono());
                accionesDefinirDueño();
                return;
            }
        } catch (Exception e) {
        }

        if (cedula.isBlank()) {
            JOptionPane.showMessageDialog(null, "Debes ingresar la cédula del dueño", "Espacio en blanco", JOptionPane.ERROR_MESSAGE);
        } else if (nombre.isBlank()) {
            JOptionPane.showMessageDialog(null, "Debes ingresar el nombre del dueño", "Espacio en blanco", JOptionPane.ERROR_MESSAGE);
        } else if (direccion.isBlank()) {
            JOptionPane.showMessageDialog(null, "Debes ingresar la direccion del dueño", "Espacio en blanco", JOptionPane.ERROR_MESSAGE);
        } else if (numero_telefono.isBlank()) {
            JOptionPane.showMessageDialog(null, "Debes ingresar el número de teléfono del dueño", "Espacio en blanco", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                dueno = new Dueño(cedula, nombre, direccion, numero_telefono);
                Dueño.agregar(dueno);
                actualizararrayDuenos();
                modeloListaDuenos.addAll(arrayDueños);
                accionesDefinirDueño();
                JOptionPane.showMessageDialog(null, "El dueño fue creado correctamete", "!Dueño creado¡", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBtnAnadirNuevoDuenoActionPerformed

    private void cambiarEstadoEspaciosDueno(boolean estado){
        jTxtNombreDueno.setEditable(estado);
        jFTxtNumeroCedula.setEditable(estado);
        jTxtDireccionDueno.setEditable(estado);
        jFTxtNumeroTelefono.setEditable(estado);
        jBtnAnadirNuevoDueno.setEnabled(estado);
        jBtnElegirDueno.setEnabled(estado);
    }

    private void jFTxtNumeroCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTxtNumeroCedulaKeyPressed

    }//GEN-LAST:event_jFTxtNumeroCedulaKeyPressed

    private void jFTxtNumeroCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFTxtNumeroCedulaActionPerformed
        // TODO add your handling code here:
        jTxtNombreDueno.requestFocus();
    }//GEN-LAST:event_jFTxtNumeroCedulaActionPerformed

    private void jTxtNombreDuenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtNombreDuenoActionPerformed
        // TODO add your handling code here:
        jTxtDireccionDueno.requestFocus();
    }//GEN-LAST:event_jTxtNombreDuenoActionPerformed

    private void jTxtDireccionDuenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtDireccionDuenoActionPerformed
        // TODO add your handling code here:
        jFTxtNumeroTelefono.requestFocus();
    }//GEN-LAST:event_jTxtDireccionDuenoActionPerformed

    private void jFTxtNumeroTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFTxtNumeroTelefonoActionPerformed
        // TODO add your handling code here:
        jBtnAnadirNuevoDueno.doClick();
    }//GEN-LAST:event_jFTxtNumeroTelefonoActionPerformed

    private void jBtnElegirDuenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnElegirDuenoActionPerformed
        // TODO add your handling code here:
        if (jListDueno.getSelectedIndex() != -1) {
            dueno = jListDueno.getSelectedValue();
            jFTxtNumeroCedula.setText(dueno.getCedula());
            jTxtNombreDueno.setText(dueno.getNombre());
            jTxtDireccionDueno.setText(dueno.getDireccion());
            jFTxtNumeroTelefono.setText(dueno.getTelefono());
            accionesDefinirDueño();
        }
        else{
            JOptionPane.showMessageDialog(null, "Debes elegir un dueño de la lista", "Dueño no elegido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnElegirDuenoActionPerformed

    private void jBtnLimpiarDuenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarDuenoActionPerformed
        // TODO add your handling code here:
        jFTxtNumeroCedula.setText("");
        jTxtNombreDueno.setText("");
        jTxtDireccionDueno.setText("");
        jFTxtNumeroTelefono.setText("");
        modeloListaDuenos.clear();
        modeloListaDuenos.addAll(arrayDueños);
        jLblDuenoElegido.setText("Dueño no elegido");
        dueno = null;
        modeloListaPacientes.clear();
        if (jBtnLimpiarDueno.getText().equals("Cambiar dueño")) {
            jBtnLimpiarPaciente.doClick();
            jBtnLimpiarDueno.setText("Limpiar");
            cambiarEstadoEspaciosDueno(true);
        }
    }//GEN-LAST:event_jBtnLimpiarDuenoActionPerformed

    private void jBtnAnadirNuevoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAnadirNuevoPacienteActionPerformed
        // TODO add your handling code here:
        if (dueno != null) {

            String nombrePaciente = jTxtNombrePaciente.getText().trim();
            for (int i = 0; i < modeloListaPacientes.getSize(); i++) {
                Paciente paciente = modeloListaPacientes.getElementAt(i);
                if (paciente.getNombre().trim().equalsIgnoreCase(nombrePaciente)) {
                    int opcion = JOptionPane.showConfirmDialog(null, "Hay un paciente con el mismo nombre, ¿Seguro que quieres crear otro?", "Paciente con el mismo nombre",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (opcion == JOptionPane.YES_OPTION) {
                        break;
                    } else {
                        jListPaciente.setSelectedValue(paciente, true);
                        jBtnElegirPaciente.doClick();
                        jLblNombrePacienteDatos.setText(paciente.getNombre());
                        return;
                    }
                }
            }
            if (nombrePaciente.isBlank()) {
                JOptionPane.showMessageDialog(null, "Debes ingresar el nombre del paciente", "Espacio en blanco", JOptionPane.ERROR_MESSAGE);
            } else {
                Especie especie = (Especie) jCmbEspecie.getSelectedItem();
                Raza raza = (Raza) jCmbRaza.getSelectedItem();
                raza.setEspecieAQuePertenece(especie);
                paciente = new Paciente(nombrePaciente,
                        (Sexo) jCmbSexo.getSelectedItem(),
                        (int) jSprEdad.getValue(),
                        dueno,
                        especie,
                        raza);
                try {
                    paciente.setId_paciente(Paciente.agregar(paciente));
                    modeloListaPacientes.clear();
                    modeloListaPacientes.addAll(Paciente.consultarPacientesPorDueño(dueno));
                    
                    cambiarEstadoEspaciosPaciente(false);
                    jBtnLimpiarPaciente.setText("Cambiar de paciente");
                    jLblNombrePacienteDatos.setText(paciente.getNombre());
                    llenarComboBoxVacunas();
                    JOptionPane.showMessageDialog(null, "El paciente fue agreado", "¡Paciente agregado!", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Primero debes crear o elegir un dueño", "¡Dueño no definido!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnAnadirNuevoPacienteActionPerformed

    private void jCmbEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbEspecieActionPerformed
        // TODO add your handling code here:
        if (jCmbEspecie.getSelectedItem() instanceof Perro) {
            jCmbRaza.setModel(new DefaultComboBoxModel(arrayRazasPerros.toArray()));
        }
        else{
            jCmbRaza.setModel(new DefaultComboBoxModel(arrayRazasGatos.toArray()));
        }
    }//GEN-LAST:event_jCmbEspecieActionPerformed

    private void jBtnElegirPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnElegirPacienteActionPerformed
        // TODO add your handling code here:
        if (jListPaciente.getSelectedIndex() != -1) {
            paciente = jListPaciente.getSelectedValue();
            jTxtNombrePaciente.setText(paciente.getNombre());
            jSprEdad.setValue(paciente.getEdad());
            jCmbSexo.setSelectedItem(paciente.getSexo());
            if (paciente.getEspecie().getId_especie() == 1) {
                jCmbEspecie.setSelectedIndex(0);
                for (Raza raza : arrayRazasPerros) {
                    if (paciente.getRaza().getId_raza() == raza.getId_raza()) {
                        jCmbRaza.setSelectedItem(raza);
                        break;
                    }
                }
            } else {
                jCmbEspecie.setSelectedIndex(1);
                for (Raza raza : arrayRazasGatos) {
                    if (paciente.getRaza().getId_raza() == raza.getId_raza()) {
                        jCmbRaza.setSelectedItem(raza);
                        break;
                    }
                }

            }
            llenarComboBoxVacunas();
            cambiarEstadoEspaciosPaciente(false);
            jLblNombrePacienteDatos.setText(paciente.getNombre());
            jBtnLimpiarPaciente.setText("Cambiar de paciente");
            JOptionPane.showMessageDialog(null, "El paciente fue elegido correctamente", "Paciente elegido", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Debes elegir un paciente de la lista", "Paciente no elegido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnElegirPacienteActionPerformed

    private void cambiarEstadoEspaciosPaciente(boolean estado) {
        jTxtNombrePaciente.setEditable(estado);
        jSprEdad.setEnabled(estado);
        jCmbSexo.setEnabled(estado);
        jCmbEspecie.setEnabled(estado);
        jCmbRaza.setEnabled(estado);
        jBtnAnadirNuevoPaciente.setEnabled(estado);
        jBtnElegirPaciente.setEnabled(estado);
    }
    private void jBtnLimpiarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarPacienteActionPerformed
        // TODO add your handling code here:
        jTxtNombrePaciente.setText("");
        jSprEdad.setValue(0);
        jCmbSexo.setSelectedIndex(0);
        jCmbEspecie.setSelectedIndex(0);
        jCmbRaza.setSelectedIndex(0);
        paciente = null;
        if (jBtnLimpiarPaciente.getText().equals("Cambiar de paciente")) {
            cambiarEstadoEspaciosPaciente(true);
            jBtnLimpiarPaciente.setText("Limpiar");
        }
    }//GEN-LAST:event_jBtnLimpiarPacienteActionPerformed

    private void jTxtNombrePacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtNombrePacienteKeyTyped
        // TODO add your handling code here
    }//GEN-LAST:event_jTxtNombrePacienteKeyTyped

    private void jListMotivosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListMotivosValueChanged
        // TODO add your handling code here:
        Motivo motivoSeleccionado = jListMotivos.getSelectedValue();
        if (motivoSeleccionado instanceof Vacunacion) {
            if (paciente != null) {
                jTxtPrecioMotivo.setEditable(false);
                jCmbVacunas.setVisible(true);
                jLblVacunas.setVisible(true);
                jTxtPrecioMotivo.setText(((Vacuna) jCmbVacunas.getSelectedItem()).getPrecio() + "");
            }

        }
        else if (motivoSeleccionado.getPrecio() != 0) {
            jTxtPrecioMotivo.setEditable(false);
            jCmbVacunas.setVisible(false);
            jTxtPrecioMotivo.setText(motivoSeleccionado.getPrecio() + "");
            jLblVacunas.setVisible(false);
        } else{
            jTxtPrecioMotivo.setEditable(true);
            jCmbVacunas.setVisible(false);
            jTxtPrecioMotivo.setText("");
            jLblVacunas.setVisible(false);
        }
        if (motivoSeleccionado.isAplicaExamen()) {
            jLblAplicaExamen.setVisible(true);
            jRbdSiAplicaExamen.setVisible(true);
            jRbdNoAplicaExamen.setVisible(true);
        }
        else{
            jLblAplicaExamen.setVisible(false);
            jRbdSiAplicaExamen.setVisible(false);
            jRbdNoAplicaExamen.setVisible(false);
        }
    }//GEN-LAST:event_jListMotivosValueChanged

    private void jCmbVacunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbVacunasActionPerformed
        // TODO add your handling code here:
        if (jCmbVacunas.getSelectedIndex() != -1 && jListMotivos.getSelectedIndex() == 1 && paciente != null) {
            jTxtPrecioMotivo.setText(((Vacuna)jCmbVacunas.getSelectedItem()).getPrecio() + "");
        }
    }//GEN-LAST:event_jCmbVacunasActionPerformed

    private void jBtnAgregarMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarMotivoActionPerformed
        // TODO add your handling code here:
        if (jListMotivos.getSelectedIndex() != -1) {
            Motivo motivoSeleccionado = jListMotivos.getSelectedValue();
            Motivo motivoAgregar = null;
            if (motivoSeleccionado instanceof Vacunacion) {
                motivoAgregar = ((Vacunacion) motivoSeleccionado).clonar();
                ((Vacunacion) motivoAgregar).setVacuna((Vacuna) jCmbVacunas.getSelectedItem());
            } else if (motivoSeleccionado.getPrecio() == 0) {
                try {
                    motivoAgregar = motivoSeleccionado.clonar();
                    motivoAgregar.setPrecio(Double.parseDouble(jTxtPrecioMotivo.getText()));
                    if (motivoAgregar.isAplicaExamen()) {
                        motivoAgregar.setAplicaExamen(!jRbdNoAplicaExamen.isSelected());
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Debes ingresar un numero en el precio", "Espacio inválido", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                motivoAgregar = motivoSeleccionado.clonar();
                if (motivoAgregar.isAplicaExamen()) {
                    motivoAgregar.setAplicaExamen(!jRbdNoAplicaExamen.isSelected());
                }
            }

            arrayMotivosElegidos.add(motivoAgregar);
            Object[] fila = {motivoAgregar, motivoAgregar.getPrecio()};
            modeloTablaMotivos.addRow(fila);
        }
    }//GEN-LAST:event_jBtnAgregarMotivoActionPerformed

    private void jCmbPruebasLaboratorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbPruebasLaboratorioActionPerformed
        // TODO add your handling code here:
        llenarListaSubCategorias();
    }//GEN-LAST:event_jCmbPruebasLaboratorioActionPerformed

    private void jBtnAgregarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarPruebaActionPerformed
        // TODO add your handling code here:
        if (jListSubCategorias.getSelectedIndex() != -1) {
            PruebaLaboratorio pruebaLaboratorioElegida = ((PruebaLaboratorio) jCmbPruebasLaboratorio.getSelectedItem());
            SubCategoriaPrueba subCategoriaElegida = jListSubCategorias.getSelectedValue();

            for (PruebaLaboratorio pruebaLaboratorio : arrayPruebasLaboratorioElegidas) {
                if (pruebaLaboratorioElegida.getId_prueba() == pruebaLaboratorio.getId_prueba()) {
                    for (SubCategoriaPrueba subCategoria : pruebaLaboratorio.getArraySubCategorias()) {
                        if (subCategoria.getId_subCategoria() == subCategoriaElegida.getId_subCategoria()) {
                            return;
                        }
                    }
                    pruebaLaboratorio.agregarSubCategoria(subCategoriaElegida);
                    Object[] fila = {pruebaLaboratorioElegida, subCategoriaElegida, subCategoriaElegida.getPrecio()};
                    modeloTablaSubCategorias.addRow(fila);
                    return;
                }
            }
            arrayPruebasLaboratorioElegidas.add(pruebaLaboratorioElegida);
            pruebaLaboratorioElegida.agregarSubCategoria(subCategoriaElegida);
            Object[] fila = {pruebaLaboratorioElegida, subCategoriaElegida, subCategoriaElegida.getPrecio()};
            modeloTablaSubCategorias.addRow(fila);
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar un tipo de prueba", "Prueba no elegida", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnAgregarPruebaActionPerformed

    private void jBtnEliminarMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarMotivoActionPerformed
        // TODO add your handling code here:
        int fila = jTableMotivosElegidos.getSelectedRow();
        if (fila != -1) {
            int opcion = JOptionPane.showConfirmDialog(null, "¿Deseas eliminar el motivo?", "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (opcion == JOptionPane.YES_OPTION) {
                if (arrayMotivosElegidos.remove(jTableMotivosElegidos.getValueAt(fila, 0))) {
                    modeloTablaMotivos.removeRow(fila);
                }
            }
        }else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar un motivo de la tabla", "Motivo no elegida", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnEliminarMotivoActionPerformed

    private void jBtnEliminarPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarPruebaActionPerformed
        // TODO add your handling code here:
        int fila = jTablePruebasElegidas.getSelectedRow();
        if (fila != -1) {
            int opcion = JOptionPane.showConfirmDialog(null, "¿Deseas eliminar la prueba?", "Eliminar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (opcion == JOptionPane.YES_OPTION) {
                PruebaLaboratorio pruebaElegida = (PruebaLaboratorio) jTablePruebasElegidas.getValueAt(fila, 0);
                if (pruebaElegida.getArraySubCategorias().remove((SubCategoriaPrueba) jTablePruebasElegidas.getValueAt(fila, 1))) {
                    modeloTablaSubCategorias.removeRow(fila);
                    if (pruebaElegida.getArraySubCategorias().isEmpty()) {
                        arrayPruebasLaboratorioElegidas.remove(pruebaElegida);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar una prueba de la tabla", "Prueba no elegida", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnEliminarPruebaActionPerformed

    private void jBtncrearCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtncrearCitaActionPerformed
        // TODO add your handling code here:
        Date fechacita = (Date) jSprFechaCita.getValue();
        Cita cita = new Cita(jTxtDiagnostico.getText(),
                jTxtIndicaciones.getText(),
                fechacita,
                (int) jSprFrecuenciaCardiaca.getValue(),
                (int) jSprFrecuenciaRespiratoria.getValue(),
                (int) jSprPulso.getValue(),
                (int) jSprTemperatura.getValue(),
                crearCondicion());
        cita.setArrayActitud(crearArrayActitudes());
        cita.setArrayEvaluacion(arrayEvaluacionesElegidas);
        cita.setArrayMotivo(arrayMotivosElegidos);
        cita.setArrayPruebaLaboratorio(arrayPruebasLaboratorioElegidas);
        String[] opciones = {"1 semana", "2 semanas", "1 mes", "2 meses", "No hay próxima cita"};
        String opcion = (String) JOptionPane.showInputDialog(null, "¡Para cuando deseas agendar la próxima cita?", "Agendar próxima cita", JOptionPane.QUESTION_MESSAGE,
                null, opciones, 0);
        if (opcion != null) {
            Date fechaProximaCita = definirProximasCitas(opcion, fechacita);

            if (fechaProximaCita != null) {
                cita.agregarProximaCita(fechaProximaCita);
            }
        }
        JOptionPane.showMessageDialog(null, cita.toStringInformacion(), "", JOptionPane.ERROR_MESSAGE);
        try {
            Cita.agregarCita(cita, paciente);
        } catch (SQLException ex) {
            Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtncrearCitaActionPerformed
    
    private Date definirProximasCitas(String opcion, Date fechaDeCita) {

        if (opcion.equals("No hay próxima cita")) {
            return null;
        }

        Calendar calendario = Calendar.getInstance();
        calendario.setTime(fechaDeCita);

        switch (opcion) {
            case "1 semana" ->
                calendario.add(Calendar.WEEK_OF_YEAR, 1);
            case "2 semanas" ->
                calendario.add(Calendar.WEEK_OF_YEAR, 2);
            case "1 mes" ->
                calendario.add(Calendar.MONTH, 1);
            case "2 meses" ->
                calendario.add(Calendar.MONTH, 2);
        }

        int diaDeLaSemana = calendario.get(Calendar.DAY_OF_WEEK);

        if (diaDeLaSemana == Calendar.SATURDAY) {
            calendario.add(Calendar.DAY_OF_MONTH, -1);
        } else if (diaDeLaSemana == Calendar.SUNDAY) {
            calendario.add(Calendar.DAY_OF_MONTH, 1);
        }

        return calendario.getTime();
    }
    
    private void jBtnAgregarEvaluaciónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarEvaluaciónActionPerformed
        // TODO add your handling code here:
        if (jListTiposEvaluaciones.getSelectedIndex() != -1) {
            Estado estado = (jRbdNormal.isSelected()) ? Estado.NORMAL
                    : (jRbdAnormal.isSelected()) ? Estado.ANORMAL : null;
            if (estado == null) {
                JOptionPane.showMessageDialog(null, "Debes elegir si el tipo de evaluacion fue normal o anormal", "Estado de evaluacion no elegido", JOptionPane.ERROR_MESSAGE);
                return;
            }
            TiposEvaluaciones tipoEvaluacion = jListTiposEvaluaciones.getSelectedValue();
            Evaluacion evaluacion = new Evaluacion(estado, tipoEvaluacion);
            arrayEvaluacionesElegidas.add(evaluacion);
            modeloListaEvaluacionesHechas.addElement(evaluacion);
        }
        else{
            JOptionPane.showMessageDialog(null, "Debes elegir un tipo de evaluación de la lista", "Tipo de evaluación no elegido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnAgregarEvaluaciónActionPerformed

    private void jBtnEliminarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarEvaluacionActionPerformed
        // TODO add your handling code here:
        int fila = jListEvaluacionesHechas.getSelectedIndex();
        if (fila != -1) {
            Evaluacion evaluacion = jListEvaluacionesHechas.getSelectedValue();
            if (arrayEvaluacionesElegidas.remove(evaluacion)) {
                modeloListaEvaluacionesHechas.remove(fila);
            } else {
                JOptionPane.showMessageDialog(null, "Debes elegir una de las evaluaciones hechas", "Evaluación no elegida", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBtnEliminarEvaluacionActionPerformed

    private void jTxtPrecioMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtPrecioMotivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtPrecioMotivoActionPerformed

    private void jFTxtNumeroCedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTxtNumeroCedulaKeyReleased
        // TODO add your handling code here:
        modeloListaDuenos.clear();
        for (Dueño dueno : arrayDueños) {
            if (dueno.getCedula().contains(jFTxtNumeroCedula.getText().replace("-", "").trim())) {
                modeloListaDuenos.addElement(dueno);

            }
        }
    }//GEN-LAST:event_jFTxtNumeroCedulaKeyReleased

    private List<Actitud> crearArrayActitudes(){
        List<Actitud> arrayListActitud = new ArrayList<>();
        if (jRdbExitado.isSelected()) {
            arrayListActitud.add(Actitud.EXCITADO);
        }
        if (jRdbDeprimido.isSelected()) {
            arrayListActitud.add(Actitud.DEPRIMIDO);
        }
        if (jRdbPostrado.isSelected()) {
            arrayListActitud.add(Actitud.POSTRADO);
        }
        
        return arrayListActitud;
    }
    
    private Condicion crearCondicion(){
        Condicion condicion = null;
        if (jRdbBajoPeso.isSelected()) {
            condicion = Condicion.BAJO_PESO;
        }
        if (jRdbSobrePeso.isSelected()) {
            condicion = Condicion.SOBRE_PESO;
        }
        if (jRdbPesoNormal.isSelected()) {
            condicion = Condicion.NORMAL;
        }
        
        return condicion;
    }
    private void llenarListaSubCategorias() {
        jListSubCategorias.setModel(modeloListaSubCategoriasPruebaLaboratorio);
        modeloListaSubCategoriasPruebaLaboratorio.clear();
        for (SubCategoriaPrueba subCategoria : arrayTodasLasSubCategorias) {
            if (subCategoria.getId_prueba() == ((BLL.PruebaLaboratorio) jCmbPruebasLaboratorio.getSelectedItem()).getId_prueba()) {
                modeloListaSubCategoriasPruebaLaboratorio.addElement(subCategoria);
            }
        }
    }
    
    private void llenarComboBoxPruebasLaboratorio() {
        try {
            jCmbPruebasLaboratorio.setModel(new DefaultComboBoxModel(PruebaLaboratorio.consultarPruebasLaboratorio().toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(JInternalMantenimientoPruebasLaboratorio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void accionesDefinirDueño() {
        jLblDuenoElegido.setText("Dueño: " + dueno.getNombre());
        cambiarEstadoEspaciosDueno(false);
        jBtnLimpiarDueno.setText("Cambiar dueño");
        try {
            modeloListaPacientes.clear();
            modeloListaPacientes.addAll(Paciente.consultarPacientesPorDueño(dueno));
        } catch (SQLException ex) {
            Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // </editor-fold>
    
    private void llenarListaMotivos(){
        jListMotivos.setModel(modeloListaMotivos);
        try {
            modeloListaMotivos.addAll(Motivo.consultarMotivos());
        } catch (Exception ex) {
            Logger.getLogger(JInternalProcesoCita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup JBtnGroupAlicaExamen;
    private javax.swing.ButtonGroup JBtnGroupCondicion;
    private javax.swing.ButtonGroup JBtnGroupEstadoEvaluacion;
    private javax.swing.JButton jBtnAgregarEvaluación;
    private javax.swing.JButton jBtnAgregarMotivo;
    private javax.swing.JButton jBtnAgregarPrueba;
    private javax.swing.JButton jBtnAnadirNuevoDueno;
    private javax.swing.JButton jBtnAnadirNuevoPaciente;
    private javax.swing.JButton jBtnElegirDueno;
    private javax.swing.JButton jBtnElegirPaciente;
    private javax.swing.JButton jBtnEliminarEvaluacion;
    private javax.swing.JButton jBtnEliminarMotivo;
    private javax.swing.JButton jBtnEliminarPrueba;
    private javax.swing.JButton jBtnLimpiarDueno;
    private javax.swing.JButton jBtnLimpiarPaciente;
    private javax.swing.JButton jBtncrearCita;
    private javax.swing.JComboBox<Especie> jCmbEspecie;
    private javax.swing.JComboBox<PruebaLaboratorio> jCmbPruebasLaboratorio;
    private javax.swing.JComboBox<Raza> jCmbRaza;
    private javax.swing.JComboBox<Sexo> jCmbSexo;
    private javax.swing.JComboBox<Vacuna> jCmbVacunas;
    private javax.swing.JFormattedTextField jFTxtNumeroCedula;
    private javax.swing.JFormattedTextField jFTxtNumeroTelefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblAplicaExamen;
    private javax.swing.JLabel jLblCedula;
    private javax.swing.JLabel jLblDireccion;
    private javax.swing.JLabel jLblDuenoElegido;
    private javax.swing.JLabel jLblDuenos;
    private javax.swing.JLabel jLblEdad;
    private javax.swing.JLabel jLblEdad1;
    private javax.swing.JLabel jLblEspecie;
    private javax.swing.JLabel jLblEspecie1;
    private javax.swing.JLabel jLblNombreDueno;
    private javax.swing.JLabel jLblNombrePaciente;
    private javax.swing.JLabel jLblNombrePacienteDatos;
    private javax.swing.JLabel jLblNumeroTelefono;
    private javax.swing.JLabel jLblPacientes;
    private javax.swing.JLabel jLblSexoPaciente;
    private javax.swing.JLabel jLblVacunas;
    private javax.swing.JList<Dueño> jListDueno;
    private javax.swing.JList<Evaluacion> jListEvaluacionesHechas;
    private javax.swing.JList<Motivo> jListMotivos;
    private javax.swing.JList<Paciente> jListPaciente;
    private javax.swing.JList<SubCategoriaPrueba> jListSubCategorias;
    private javax.swing.JList<TiposEvaluaciones> jListTiposEvaluaciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelCita;
    private javax.swing.JPanel jPanelDatosPaciente;
    private javax.swing.JPanel jPanelDatosPaciente2;
    private javax.swing.JPanel jPanelDueno;
    private javax.swing.JPanel jPanelMotivo;
    private javax.swing.JPanel jPanelMotivosElegidos;
    private javax.swing.JPanel jPanelPaciente;
    private javax.swing.JPanel jPanelPrueba;
    private javax.swing.JRadioButton jRbdAnormal;
    private javax.swing.JRadioButton jRbdNoAplicaExamen;
    private javax.swing.JRadioButton jRbdNormal;
    private javax.swing.JRadioButton jRbdSiAplicaExamen;
    private javax.swing.JRadioButton jRdbBajoPeso;
    private javax.swing.JRadioButton jRdbDeprimido;
    private javax.swing.JRadioButton jRdbExitado;
    private javax.swing.JRadioButton jRdbPesoNormal;
    private javax.swing.JRadioButton jRdbPostrado;
    private javax.swing.JRadioButton jRdbSobrePeso;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSpinner jSprEdad;
    private javax.swing.JSpinner jSprFechaCita;
    private javax.swing.JSpinner jSprFrecuenciaCardiaca;
    private javax.swing.JSpinner jSprFrecuenciaRespiratoria;
    private javax.swing.JSpinner jSprPulso;
    private javax.swing.JSpinner jSprTemperatura;
    private javax.swing.JTabbedPane jTPlProcesoCita;
    private javax.swing.JTable jTableMotivosElegidos;
    private javax.swing.JTable jTablePruebasElegidas;
    private javax.swing.JTextField jTxtDiagnostico;
    private javax.swing.JTextField jTxtDireccionDueno;
    private javax.swing.JTextField jTxtIndicaciones;
    private javax.swing.JTextField jTxtNombreDueno;
    private javax.swing.JTextField jTxtNombrePaciente;
    private javax.swing.JTextField jTxtPrecioMotivo;
    // End of variables declaration//GEN-END:variables
}
